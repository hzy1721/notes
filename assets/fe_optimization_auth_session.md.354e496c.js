import{_ as s,c as e,o as i,d as o}from"./app.7410356c.js";const t="/assets/session.03afd376.png",f=JSON.parse('{"title":"Session","description":"","frontmatter":{},"headers":[],"relativePath":"fe/optimization/auth/session.md","lastUpdated":1682050462000}'),a={name:"fe/optimization/auth/session.md"},n=o('<h1 id="session" tabindex="-1">Session <a class="header-anchor" href="#session" aria-hidden="true">#</a></h1><ol><li>客户端第一次请求服务端，服务端创建 session，返回对应的 session ID</li><li>客户端把 session ID 保存到 cookie 中</li><li>后续请求带上 cookie 中的 session ID，服务端就知道当前请求属于哪个用户</li></ol><p><img src="'+t+'" alt=""></p><p>优点：</p><ul><li>cookie 自动发送，无需手动编写逻辑</li></ul><p>缺点：</p><ul><li>服务端需要保存 session，带来额外开销</li><li>多服务器之间的 session 同步增加了复杂度</li><li>cookie 在跨域、非浏览器场景使用不太方便</li><li>cookie 有 CSRF 风险</li></ul>',7),l=[n];function _(c,r,p,d,h,m){return i(),e("div",null,l)}const S=s(a,[["render",_]]);export{f as __pageData,S as default};
