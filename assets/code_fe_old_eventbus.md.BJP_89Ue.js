import{_ as e,c as l,o as a,a1 as i}from"./chunks/framework.mNpZ2GHZ.js";const b=JSON.parse('{"title":"EventBus","description":"","frontmatter":{},"headers":[],"relativePath":"code/fe/old/eventbus.md","filePath":"code/fe/old/eventbus.md","lastUpdated":1702822707000}'),t={name:"code/fe/old/eventbus.md"},c=i('<h1 id="eventbus" tabindex="-1">EventBus <a class="header-anchor" href="#eventbus" aria-label="Permalink to &quot;EventBus&quot;">​</a></h1><h2 id="vue-2" tabindex="-1">Vue 2 <a class="header-anchor" href="#vue-2" aria-label="Permalink to &quot;Vue 2&quot;">​</a></h2><p>Vue 2 的 <code>Vue</code> 对象也提供了这 4 个实例方法：</p><h3 id="vm-on-event-callback" tabindex="-1">vm.$on( event, callback ) <a class="header-anchor" href="#vm-on-event-callback" aria-label="Permalink to &quot;vm.$on( event, callback )&quot;">​</a></h3><ul><li>参数： <ul><li><code>{string | Array&lt;string&gt;} event</code></li><li><code>{Function} callback</code></li></ul></li><li>用法： <ul><li>监听当前实例上的自定义事件。</li><li>事件可以由 <code>vm.$emit</code> 触发。</li><li>回调函数会接收所有传入事件触发函数的额外参数。</li></ul></li></ul><h3 id="vm-once-event-callback" tabindex="-1">vm.$once( event, callback ) <a class="header-anchor" href="#vm-once-event-callback" aria-label="Permalink to &quot;vm.$once( event, callback )&quot;">​</a></h3><ul><li>参数： <ul><li><code>{string} event</code></li><li><code>{Function} callback</code></li></ul></li><li>用法： <ul><li>监听一个自定义事件，但是只触发一次。</li><li>一旦触发之后，监听器就会被移除。</li></ul></li></ul><h3 id="vm-off-event-callback" tabindex="-1">vm.$off( [event, callback] ) <a class="header-anchor" href="#vm-off-event-callback" aria-label="Permalink to &quot;vm.$off( [event, callback] )&quot;">​</a></h3><ul><li>参数： <ul><li><code>{string | Array&lt;string&gt;} event</code></li><li><code>{Function} [callback]</code></li></ul></li><li>用法： <ul><li>移除自定义事件监听器。 <ul><li>如果没有提供参数，则移除所有的事件监听器；</li><li>如果只提供了事件，则移除该事件所有的监听器；</li><li>如果同时提供了事件与回调，则只移除这个回调的监听器。</li></ul></li></ul></li></ul><h3 id="vm-emit-eventname-args" tabindex="-1">vm.$emit( eventName, [...args] ) <a class="header-anchor" href="#vm-emit-eventname-args" aria-label="Permalink to &quot;vm.$emit( eventName, [...args] )&quot;">​</a></h3><ul><li>参数： <ul><li><code>{string} eventName</code></li><li><code>[...args]</code></li></ul></li><li>用法： <ul><li>触发当前实例上的事件。</li><li>附加参数都会传给监听器回调。</li></ul></li></ul>',11),n=[c];function o(r,u,d,s,v,m){return a(),l("div",null,n)}const _=e(t,[["render",o]]);export{b as __pageData,_ as default};
