import{_ as e,c as s,o as a,d as t}from"./app.32a4a0ab.js";const A=JSON.parse('{"title":"useState","description":"","frontmatter":{},"headers":[{"level":2,"title":"状态上移","slug":"状态上移","link":"#状态上移","children":[]}],"relativePath":"fe/react-stack/react/hooks/use-state.md","lastUpdated":1684034003000}'),n={name:"fe/react-stack/react/hooks/use-state.md"},o=t(`<h1 id="usestate" tabindex="-1">useState <a class="header-anchor" href="#usestate" aria-hidden="true">#</a></h1><p><code>useState</code> 声明一个状态变量，传入初始值，返回状态变量与修改状态值的 setter 函数。</p><ul><li>初始值可以是任意类型</li><li>通过解构语法为返回的变量和 setter 函数赋予合适的名称</li><li>多次调用返回的状态变量是独立的</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setState</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useState</span><span style="color:#A6ACCD;">(initialState)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="状态上移" tabindex="-1">状态上移 <a class="header-anchor" href="#状态上移" aria-hidden="true">#</a></h2><p>如果需要在两个或多个组件之间共享状态数据，可以把状态定义上移到最近的公共祖先组件，然后通过 <code>props</code> 或 <code>Context</code> 将状态变量传递到需要的后代组件。</p>`,6),l=[o];function c(p,r,i,d,_,h){return a(),s("div",null,l)}const C=e(n,[["render",c]]);export{A as __pageData,C as default};
