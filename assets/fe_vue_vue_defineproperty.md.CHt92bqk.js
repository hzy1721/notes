import{_ as e,c as o,o as t,a1 as i}from"./chunks/framework.mNpZ2GHZ.js";const _=JSON.parse('{"title":"Object.defineProperty","description":"","frontmatter":{},"headers":[],"relativePath":"fe/vue/vue/defineproperty.md","filePath":"fe/vue/vue/defineproperty.md","lastUpdated":1702822707000}'),d={name:"fe/vue/vue/defineproperty.md"},s=i('<h1 id="object-defineproperty" tabindex="-1">Object.defineProperty <a class="header-anchor" href="#object-defineproperty" aria-label="Permalink to &quot;Object.defineProperty&quot;">​</a></h1><p><strong>ES6 之前</strong>拦截对象属性的读取和设置操作的<strong>唯一方法</strong>，被 Vue 2 和 Vue 3 中的 <code>ref</code> 采用。</p><p>创建或修改对象上的属性，返回对象。支持指定属性特性，支持访问器属性。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj, prop, descriptor);</span></span></code></pre></div><ul><li><code>obj</code>：目标对象</li><li><code>prop</code>：目标属性，字符串或 Symbol 类型</li><li><code>descriptor</code>：属性特性 <ul><li><code>value</code>：默认 <code>undefined</code></li><li><code>writable</code>：默认 <code>false</code></li><li><code>enumerable</code>：默认 <code>false</code></li><li><code>configurable</code>：默认 <code>false</code></li><li><code>get</code>：访问器属性的 getter 函数</li><li><code>set</code>：访问器属性的 setter 函数</li></ul></li></ul>',5),a=[s];function c(r,l,n,p,f,u){return t(),o("div",null,a)}const b=e(d,[["render",c]]);export{_ as __pageData,b as default};
