import{_ as e,c as i,o as t,a1 as s}from"./chunks/framework.mNpZ2GHZ.js";const o="/assets/PopStateEvent.BBBMLQaC.png",w=JSON.parse('{"title":"window.history","description":"","frontmatter":{},"headers":[],"relativePath":"fe/vue/vue-router/window-history.md","filePath":"fe/vue/vue-router/window-history.md","lastUpdated":1702822707000}'),a={name:"fe/vue/vue-router/window-history.md"},d=s('<h1 id="window-history" tabindex="-1">window.history <a class="header-anchor" href="#window-history" aria-label="Permalink to &quot;window.history&quot;">​</a></h1><p><code>window.history</code> 是一个 <code>History</code> 对象，可以进行页面导航。</p><p>会话历史 (session history)：当前标签页访问过的所有页面。</p><p>出于安全因素，<code>window.history</code> 访问不到会话历史的 URL。</p><p>属性：</p><ul><li><code>length</code>：会话历史的长度，只读属性</li><li><code>scrollRestoration</code>：是否自动复原滚动位置，<code>auto</code> 或 <code>manual</code></li><li><code>state</code>：当前页面的状态</li></ul><p>方法：</p><ul><li><code>back()</code>：后退，效果等同于点击后退按钮</li><li><code>forward()</code>：前进，效果等同于点击前进按钮</li><li><code>go(delta = 0)</code>：相对当前页面跳转 delta 步，默认刷新当前页面</li><li><code>pushState(state, unused[, url])</code>：添加一条历史记录 <ul><li><code>state</code>：状态对象，会传入 popstate 的处理函数</li><li><code>unused</code>：历史遗留，一般传一个空字符串</li><li><code>url</code>：同源的新 URL，可以是绝对 URL 或相对路径，默认是当前页面 URL</li><li>特点：只会添加记录 (并改变地址栏 URL)，不会真正进行页面跳转</li></ul></li><li><code>replaceState(state, unused[, url])</code>：替换当前历史记录 <ul><li>参数与 <code>pushState</code> 相同，区别是替换当前记录而不是添加一条新记录</li></ul></li></ul><p><code>popstate</code> 事件：</p><ul><li>当前历史记录改变时触发</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;popstate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {});</span></span></code></pre></div><img src="'+o+'" width="50%">',12),l=[d];function c(n,r,p,h,u,k){return t(),i("div",null,l)}const y=e(a,[["render",c]]);export{w as __pageData,y as default};
