import{_ as t,c as d,o as r,a1 as e}from"./chunks/framework.mNpZ2GHZ.js";const v=JSON.parse('{"title":"Canvas API","description":"","frontmatter":{},"headers":[],"relativePath":"fe/field/canvas/html-canvas.md","filePath":"fe/field/canvas/html-canvas.md","lastUpdated":1721570220000}'),a={name:"fe/field/canvas/html-canvas.md"},n=e('<h1 id="canvas-api" tabindex="-1">Canvas API <a class="header-anchor" href="#canvas-api" aria-label="Permalink to &quot;Canvas API&quot;">​</a></h1><h2 id="canvasrenderingcontext2d" tabindex="-1">CanvasRenderingContext2D <a class="header-anchor" href="#canvasrenderingcontext2d" aria-label="Permalink to &quot;CanvasRenderingContext2D&quot;">​</a></h2><p>这个类是 canvas 操作的核心，通过 <code>getContext(&#39;2d&#39;)</code> 获取到 <code>ctx</code> 后，就可以调用上面的各种方法在画布上绘制。</p><table tabindex="0"><thead><tr><th>类别</th><th>方法</th><th>用途</th></tr></thead><tbody><tr><td>路径</td><td>beginPath()</td><td></td></tr><tr><td></td><td>closePath()</td><td></td></tr><tr><td></td><td>isPointInPath()</td><td></td></tr><tr><td></td><td>moveTo()</td><td></td></tr><tr><td>圆弧</td><td>arc()</td><td></td></tr><tr><td></td><td>arcTo()</td><td></td></tr><tr><td>曲线</td><td>bezierCurveTo()</td><td></td></tr><tr><td></td><td>quadraticCurveTo()</td><td></td></tr><tr><td>清除</td><td>clearRect()</td><td></td></tr><tr><td>裁剪</td><td>clip()</td><td></td></tr><tr><td>渐变</td><td>createConicGradient()</td><td></td></tr><tr><td></td><td>createLinearGradient()</td><td></td></tr><tr><td></td><td>createRadialGradient()</td><td></td></tr><tr><td>图片</td><td>createImageData()</td><td></td></tr><tr><td></td><td>drawImage()</td><td></td></tr><tr><td></td><td>getImageData()</td><td></td></tr><tr><td></td><td>putImageData()</td><td></td></tr><tr><td>图案</td><td>createPattern()</td><td></td></tr><tr><td>聚焦</td><td>drawFocusIfNeeded()</td><td></td></tr><tr><td>椭圆</td><td>ellipse()</td><td></td></tr><tr><td>矩形</td><td>rect()</td><td></td></tr><tr><td></td><td>roundRect()</td><td></td></tr><tr><td></td><td>strokeRect()</td><td></td></tr><tr><td>填充</td><td>fill()</td><td></td></tr><tr><td></td><td>fillRect()</td><td></td></tr><tr><td></td><td>fillText()</td><td></td></tr><tr><td>context</td><td>getContextAttributes()</td><td></td></tr><tr><td></td><td>isContextLost()</td><td></td></tr><tr><td></td><td>reset()</td><td></td></tr><tr><td></td><td>restore()</td><td></td></tr><tr><td></td><td>save()</td><td></td></tr><tr><td>线条</td><td>getLineDash()</td><td></td></tr><tr><td></td><td>lineTo()</td><td></td></tr><tr><td></td><td>setLineDash()</td><td></td></tr><tr><td>变换</td><td>getTransform()</td><td></td></tr><tr><td></td><td>resetTransform()</td><td></td></tr><tr><td></td><td>setTransform()</td><td></td></tr><tr><td></td><td>transform()</td><td></td></tr><tr><td>边框</td><td>isPointInStroke()</td><td></td></tr><tr><td></td><td>stroke()</td><td></td></tr><tr><td>文本</td><td>measureText()</td><td></td></tr><tr><td></td><td>strokeText()</td><td></td></tr><tr><td>旋转</td><td>rotate()</td><td></td></tr><tr><td>缩放</td><td>scale()</td><td></td></tr><tr><td>平移</td><td>translate()</td><td></td></tr></tbody></table>',4),s=[n];function o(c,i,l,h,_,m){return r(),d("div",null,s)}const p=t(a,[["render",o]]);export{v as __pageData,p as default};
