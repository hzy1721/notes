import{_ as e,c as s,o as a,d as t}from"./app.71c38c5d.js";const h=JSON.parse('{"title":"useEffect","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react-stack/react/hooks/use-effect.md","lastUpdated":1684034003000}'),l={name:"fe/react-stack/react/hooks/use-effect.md"},c=t(`<h1 id="useeffect" tabindex="-1">useEffect <a class="header-anchor" href="#useeffect" aria-hidden="true">#</a></h1><p>将组件与外部系统进行同步。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">useEffect</span><span style="color:#A6ACCD;">(setup</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dependencies</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><ul><li>setup <ul><li>第一个参数传入</li><li>触发副作用，比如修改 DOM、建立订阅</li><li>在组件第一次挂载和每次更新时执行</li></ul></li><li>cleanup <ul><li>setup 函数的返回值</li><li>清除副作用，比如取消订阅、取消定时器</li><li>在每次更新和组件卸载时执行</li><li>更新时先执行 cleanup，后重新执行 setup</li></ul></li></ul><p>第二个参数指定依赖数组，只有依赖变化时才重新执行。</p>`,5),n=[c];function o(p,i,r,u,d,_){return a(),s("div",null,n)}const A=e(l,[["render",o]]);export{h as __pageData,A as default};
