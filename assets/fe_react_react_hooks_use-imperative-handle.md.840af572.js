import{_ as e,c as a,o as s,U as t}from"./chunks/framework.e548c890.js";const m=JSON.parse('{"title":"useImperativeHandle","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react/react/hooks/use-imperative-handle.md","filePath":"fe/react/react/hooks/use-imperative-handle.md","lastUpdated":1702821351000}'),l={name:"fe/react/react/hooks/use-imperative-handle.md"},o=t('<h1 id="useimperativehandle" tabindex="-1">useImperativeHandle <a class="header-anchor" href="#useimperativehandle" aria-label="Permalink to &quot;useImperativeHandle&quot;">​</a></h1><p>自定义 ref 绑定的内容。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">useImperativeHandle</span><span style="color:#A6ACCD;">(ref</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> createHandle</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dependencies</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>参数：</p><ul><li><code>ref</code>：通过 <code>forwardRef</code> 拿到的 ref</li><li><code>createHandle</code>：返回暴露的 ref 值</li><li><code>dependencies</code>：<code>createHandle</code> 用到的所有响应式数据</li></ul><p>返回值：</p><ul><li><code>undefined</code></li></ul><p>用途：</p><ul><li>不想暴露整个 DOM 节点，而是节点的部分方法</li><li>暴露自定义方法</li></ul>',9),n=[o];function r(c,p,d,i,u,_){return s(),a("div",null,n)}const f=e(l,[["render",r]]);export{m as __pageData,f as default};
