import{_ as a,c as s,o as i,a1 as t}from"./chunks/framework.mNpZ2GHZ.js";const _=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"fe/lang/ts/intro.md","filePath":"fe/lang/ts/intro.md","lastUpdated":1704115023000}'),e={name:"fe/lang/ts/intro.md"},l=t(`<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><p>TypeScript = JavaScript + 类型</p><ul><li>代码检查</li><li>自动补全</li></ul><blockquote><p>仅限于开发环境，生产环境会抹掉类型</p></blockquote><h2 id="playground" tabindex="-1">Playground <a class="header-anchor" href="#playground" aria-label="Permalink to &quot;Playground&quot;">​</a></h2><p><a href="https://www.typescriptlang.org/play" target="_blank" rel="noreferrer">https://www.typescriptlang.org/play</a></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typescript</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全局</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typescript</span></span></code></pre></div><h2 id="渐进式引入" tabindex="-1">渐进式引入 <a class="header-anchor" href="#渐进式引入" aria-label="Permalink to &quot;渐进式引入&quot;">​</a></h2><p>对于已有 JS 项目，可以逐步引入 TS，而不需要完全替换。</p><ol><li>在 JS 文件加入 <code>@ts-check</code> 开启 TS 检查</li><li>TS 可以借助 JSDoc 注释检查类型</li><li>最终替换为合法的 TS 类型</li></ol>`,11),n=[l];function p(r,h,o,c,d,k){return i(),s("div",null,n)}const u=a(e,[["render",p]]);export{_ as __pageData,u as default};
