import{_ as s,c as e,o as l,d as a}from"./app.7410356c.js";const D=JSON.parse('{"title":"module","description":"","frontmatter":{},"headers":[{"level":2,"title":"module.rules","slug":"module-rules","link":"#module-rules","children":[]},{"level":2,"title":"Rule","slug":"rule","link":"#rule","children":[]},{"level":2,"title":"Rule.test","slug":"rule-test","link":"#rule-test","children":[]},{"level":2,"title":"Rule.type","slug":"rule-type","link":"#rule-type","children":[]},{"level":2,"title":"Rule.use","slug":"rule-use","link":"#rule-use","children":[{"level":3,"title":"UseEntry","slug":"useentry","link":"#useentry","children":[]}]}],"relativePath":"fe/react-stack/webpack/module.md","lastUpdated":1683687617000}'),n={name:"fe/react-stack/webpack/module.md"},o=a(`<h1 id="module" tabindex="-1">module <a class="header-anchor" href="#module" aria-hidden="true">#</a></h1><p>规定不同类型模块的处理方式。</p><h2 id="module-rules" tabindex="-1">module.rules <a class="header-anchor" href="#module-rules" aria-hidden="true">#</a></h2><table><thead><tr><th>类型</th><th>含义</th><th>默认值</th></tr></thead><tbody><tr><td><code>Rule[]</code></td><td><code>Rule</code> 数组，规定模块处理方式</td><td></td></tr></tbody></table><h2 id="rule" tabindex="-1">Rule <a class="header-anchor" href="#rule" aria-hidden="true">#</a></h2><p><code>Rule</code> 分为 3 部分：</p><ul><li>conditions <ul><li>resource：被引用的资源 <ul><li><code>test/include/exclude/resource</code></li></ul></li><li>issuer：引用方 <ul><li><code>issuer</code></li></ul></li></ul></li><li>results <ul><li>loaders <ul><li><code>loader/options/use</code></li><li><code>query/loaders</code></li><li><code>enforce</code></li></ul></li><li>parser options <ul><li><code>parser</code></li></ul></li></ul></li><li>nested Rules <ul><li><code>rules/oneOf</code></li></ul></li></ul><h2 id="rule-test" tabindex="-1">Rule.test <a class="header-anchor" href="#rule-test" aria-hidden="true">#</a></h2><p>包含文件名满足条件的所有模块。</p><h2 id="rule-type" tabindex="-1">Rule.type <a class="header-anchor" href="#rule-type" aria-hidden="true">#</a></h2><table><thead><tr><th>类型</th><th>含义</th><th>默认值</th></tr></thead><tbody><tr><td><code>string</code></td><td><code>Rule</code> 匹配模块的类型</td><td></td></tr></tbody></table><p>可能的取值：</p><ul><li><code>javascript/auto</code></li><li><code>javascript/dynamic</code></li><li><code>javascript/esm</code></li><li><code>json</code></li><li><code>webassembly/sync</code></li><li><code>webassembly/async</code></li><li><code>asset</code></li><li><code>asset/source</code></li><li><code>asset/resource</code></li><li><code>asset/inline</code></li></ul><h2 id="rule-use" tabindex="-1">Rule.use <a class="header-anchor" href="#rule-use" aria-hidden="true">#</a></h2><table><thead><tr><th>类型</th><th>含义</th><th>默认值</th></tr></thead><tbody><tr><td><code>UseEntry[]</code></td><td><code>UseEntry</code> 数组，定义使用的 loader</td><td></td></tr><tr><td><code>(info) =&gt; UseEntry[]</code></td><td></td><td></td></tr></tbody></table><h3 id="useentry" tabindex="-1">UseEntry <a class="header-anchor" href="#useentry" aria-hidden="true">#</a></h3><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UseEntry</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UseEntryObject</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">info</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UseEntryInfo</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UseEntryObject</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UseEntryObject</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">loader</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// loader 配置，会被传给 loader</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// options 的别名，已废弃</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">query</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UseEntryInfo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">compiler</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">issuer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">realResource</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">resource</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,17),t=[o];function p(r,c,d,i,y,u){return l(),e("div",null,t)}const C=s(n,[["render",p]]);export{D as __pageData,C as default};
