import{_ as s,c as l,o as a,d as n}from"./app.e4b9fdbe.js";const d=JSON.parse('{"title":"Web 安全","description":"","frontmatter":{},"headers":[{"level":2,"title":"XSS (Cross-Site Scripting)","slug":"xss-cross-site-scripting","link":"#xss-cross-site-scripting","children":[]},{"level":2,"title":"CSRF (Cross-Site Request Forgery)","slug":"csrf-cross-site-request-forgery","link":"#csrf-cross-site-request-forgery","children":[]},{"level":2,"title":"Injection (注入)","slug":"injection-注入","link":"#injection-注入","children":[{"level":3,"title":"SQL Injection","slug":"sql-injection","link":"#sql-injection","children":[]},{"level":3,"title":"CLI Injection","slug":"cli-injection","link":"#cli-injection","children":[]}]},{"level":2,"title":"SSRF (Server-Side Request Forgery)","slug":"ssrf-server-side-request-forgery","link":"#ssrf-server-side-request-forgery","children":[]},{"level":2,"title":"DoS (Denial of Service)","slug":"dos-denial-of-service","link":"#dos-denial-of-service","children":[{"level":3,"title":"ReDoS (Regex DoS)","slug":"redos-regex-dos","link":"#redos-regex-dos","children":[]},{"level":3,"title":"Logical DoS","slug":"logical-dos","link":"#logical-dos","children":[]},{"level":3,"title":"DDoS (Distributed DoS)","slug":"ddos-distributed-dos","link":"#ddos-distributed-dos","children":[]}]},{"level":2,"title":"传输层","slug":"传输层","link":"#传输层","children":[{"level":3,"title":"中间人攻击 (Man-in-the-middle attack)","slug":"中间人攻击-man-in-the-middle-attack","link":"#中间人攻击-man-in-the-middle-attack","children":[]}]}],"relativePath":"fe/security/web.md"}'),p={name:"fe/security/web.md"},o=n(`<h1 id="web-安全" tabindex="-1">Web 安全 <a class="header-anchor" href="#web-安全" aria-hidden="true">#</a></h1><p><strong>Web 安全</strong>是每个前端开发必须掌握的知识点，这篇文章从攻击手段的角度阐述了每种攻击的原理和防御措施。</p><h2 id="xss-cross-site-scripting" tabindex="-1">XSS (Cross-Site Scripting) <a class="header-anchor" href="#xss-cross-site-scripting" aria-hidden="true">#</a></h2><p>XSS (跨站脚本攻击) 指的是在安全页面插入并执行恶意脚本。</p><p>导致 XSS 的原因主要有以下两个方面：</p><ul><li>信任用户提交的内容，不进行过滤</li><li>将用户内容直接转化为 DOM</li></ul><p>XSS 可以分为几大类：</p><ul><li>Stored XSS (存储型) <ul><li>恶意脚本保存在后端数据库中</li><li>所有用户访问页面都会执行恶意脚本</li><li>危害最大</li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">public async </span><span style="color:#82AAFF;">submit</span><span style="color:#A6ACCD;">(ctx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">id</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 用户提供的 content 没有过滤就直接保存到数据库中</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">db</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">save</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    content</span><span style="color:#89DDFF;">:,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">id</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">public async </span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(ctx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">db</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 直接把用户内容转为 DOM 字符串，同样没有过滤</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;div&gt;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&lt;/div&gt;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 攻击者提交恶意 content</span></span>
<span class="line"><span style="color:#82AAFF;">fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/submit</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;script&gt;alert(&#39;xss&#39;);&lt;/script&gt;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 恶意脚本会被渲染出来，在所有访问页面的用户浏览器上执行</span></span>
<span class="line"><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;div&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;script&gt;alert(&#39;xss&#39;);&lt;/script&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;/div&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><ul><li>Reflected XSS (反射型) <ul><li>不涉及数据库</li><li>利用 query param 传递恶意脚本</li></ul></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">host/path/?param=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 服务端接口函数</span></span>
<span class="line"><span style="color:#A6ACCD;">public async </span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(ctx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">param</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 直接把用户参数转为 DOM</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;div&gt;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">param</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&lt;/div&gt;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>DOM-based XSS (基于 DOM) <ul><li>不涉及服务端</li><li>同样利用 query param，不过是在浏览器端处理</li></ul></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">host/path/?param=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 浏览器端脚本</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> content </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(location</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">searchParams</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">param</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> div </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> content</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#A6ACCD;">(div)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><ul><li>Mutation-based XSS <ul><li>利用浏览器渲染 DOM 的特性 (不同浏览器会有差异)</li><li>针对不同的浏览器使用不同的攻击手段</li></ul></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">noscript</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">title</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;/noscript&gt;&lt;img src=x onerror=alert(1)&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">noscript</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d391c2b925cc4e02b7dc1895fcf2a568~tplv-k3u1fbpfcp-watermark.image?" alt="截屏2022-07-31 18.30.19.png"></p><p>防御措施：</p><ul><li>进行以下操作前，过滤用户内容 <ul><li>把用户内容转为 DOM</li><li>用户上传 svg</li><li>用户自定义跳转链接</li><li>用户自定义 CSS 样式</li></ul></li><li>使用现成工具 <ul><li>主流框架默认防御 XSS，比如 React、Vue</li><li><code>google-closure-library</code></li><li>Node 可以用 <code>DOMPurify</code></li></ul></li><li>CSP (Content Security Policy)</li></ul><h2 id="csrf-cross-site-request-forgery" tabindex="-1">CSRF (Cross-Site Request Forgery) <a class="header-anchor" href="#csrf-cross-site-request-forgery" aria-hidden="true">#</a></h2><p>CSRF (跨站请求伪造) 指的是诱导用户发送带有 Cookie 的伪造请求，完成用户授权操作。</p><p>CSRF 有以下几种类型：</p><ul><li>GET 请求 <ul><li><code>&lt;a&gt;</code> 标签</li><li><code>&lt;img&gt;</code> 标签</li></ul></li><li>POST 请求 <ul><li><code>&lt;form&gt;</code> 表单</li></ul></li><li>iframe 攻击 <ul><li>iframe 隐藏，上面覆盖 pointer-events 为 none 的 button</li><li>iframe 点击后发起伪造的同源请求</li></ul></li></ul><p>防御措施：</p><ul><li>限制请求来源 <ul><li>校验 <code>Origin</code> 和 <code>Referer</code></li><li>先访问过页面，才接受请求</li><li>使用与用户绑定的 token，并设置过期时间</li></ul></li><li>SameSite Cookie</li><li><code>X-Frame-Options: DENY/SAMEORIGIN</code></li><li>不要在一个接口内既返回数据又修改数据</li><li>Node 中间件</li></ul><h2 id="injection-注入" tabindex="-1">Injection (注入) <a class="header-anchor" href="#injection-注入" aria-hidden="true">#</a></h2><h3 id="sql-injection" tabindex="-1">SQL Injection <a class="header-anchor" href="#sql-injection" aria-hidden="true">#</a></h3><p>SQL 注入指的是直接拼接 SQL 语句和用户提供的参数，导致用户参数中的恶意 SQL 片段得到执行。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">public async </span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(ctx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">username</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sql</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">    SELECT a, b, c FROM table</span></span>
<span class="line"><span style="color:#C3E88D;">    WHERE username = </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">username</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">username</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user1; DROP TABLE table;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> a, b, c </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">table</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> username </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> user1; </span><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">table</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><p>可能导致的后果：</p><ul><li>通过 <code>DROP</code> 语句删除表或数据库</li><li>表数据被窃取或修改</li></ul><p>防御措施：</p><ul><li><code>PREPARE</code></li></ul><h3 id="cli-injection" tabindex="-1">CLI Injection <a class="header-anchor" href="#cli-injection" aria-hidden="true">#</a></h3><p>CLI 注入指的是直接拼接 CLI 命令和用户提供的参数，导致用户参数中的恶意命令得到执行。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">public async </span><span style="color:#82AAFF;">convertVideo</span><span style="color:#A6ACCD;">(ctx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">video</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">exec</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">convert-cli </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">video</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> -o </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">video</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test.mp4</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#FFCB6B;">options</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">option1 ; rm -rf /</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">convert-cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test.mp4</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">option1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/</span></span>
<span class="line"></span></code></pre></div><p>可能导致的后果：</p><ul><li>通过 <code>rm -rf</code> 删除重要文件</li><li>读取或修改重要文件 <ul><li><code>/etc/passwd</code></li><li><code>/etc/shadow</code></li><li><code>~/.ssh</code></li><li><code>/etc/nginx/nginx.conf</code></li></ul></li></ul><p>防御措施：</p><ul><li>最小权限原则 <ul><li>不要用 <code>sudo</code> 或 <code>root</code> 执行命令</li></ul></li><li>白名单+过滤 <ul><li><code>rm</code> 肯定不允许</li></ul></li></ul><h2 id="ssrf-server-side-request-forgery" tabindex="-1">SSRF (Server-Side Request Forgery) <a class="header-anchor" href="#ssrf-server-side-request-forgery" aria-hidden="true">#</a></h2><p>SSRF (服务端请求伪造) 指的是直接使用用户参数在服务端进行各种操作，造成服务端资源被非法访问。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">public async </span><span style="color:#82AAFF;">webhook</span><span style="color:#A6ACCD;">(ctx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// callback 可能是内网 URL</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">callback</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>防御措施：</p><ul><li>限制 URL 的协议、域名、IP、端口 <ul><li>禁止访问内网</li></ul></li></ul><h2 id="dos-denial-of-service" tabindex="-1">DoS (Denial of Service) <a class="header-anchor" href="#dos-denial-of-service" aria-hidden="true">#</a></h2><p>DoS (拒绝服务) 指的是通过某种手段使服务器资源被显著消耗，无法响应更多请求，造成雪崩效应，最终导致服务不可用。</p><h3 id="redos-regex-dos" tabindex="-1">ReDoS (Regex DoS) <a class="header-anchor" href="#redos-regex-dos" aria-hidden="true">#</a></h3><p>不加问号 <code>?</code> 的正则表达式拥有<strong>贪婪匹配</strong>的特性，通过构造特定结构的字符串能够造成正则匹配过程中的大量回溯，使接口响应时间大幅增加、吞吐量大幅减少。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/159221d7ebb2449abae4ab3ddf4d636a~tplv-k3u1fbpfcp-watermark.image?" alt="截屏2022-08-01 08.58.48.png"></p><p>防御措施：</p><ul><li>Code Review <ul><li>避免上线此类代码</li></ul></li><li>代码扫描+正则性能测试</li><li>不使用用户提供的正则</li></ul><h3 id="logical-dos" tabindex="-1">Logical DoS <a class="header-anchor" href="#logical-dos" aria-hidden="true">#</a></h3><p>开发者编写的一些不合理的代码或一些不合理的需求，也会导致服务器资源被大量消耗、接口响应时间变长，比如：</p><ul><li>耗时的同步操作</li><li>数据库写入</li><li>SQL join</li><li>文件备份</li><li>循环执行逻辑</li></ul><h3 id="ddos-distributed-dos" tabindex="-1">DDoS (Distributed DoS) <a class="header-anchor" href="#ddos-distributed-dos" aria-hidden="true">#</a></h3><p>DDoS 指的是大量僵尸设备在短时间内向服务器发起请求，造成服务端带宽或 CPU 耗尽，无法响应新请求。拥有以下特点：</p><ul><li>直接访问 IP</li><li>不区分 API</li><li>消耗大量带宽</li></ul><p>比较常见的有 SYN Flood。</p><p>防御措施：</p><ul><li>流量治理 <ul><li>负载均衡</li><li>API 网关</li><li>CDN</li></ul></li><li>快速自动扩容</li><li>非核心服务降级</li></ul><h2 id="传输层" tabindex="-1">传输层 <a class="header-anchor" href="#传输层" aria-hidden="true">#</a></h2><h3 id="中间人攻击-man-in-the-middle-attack" tabindex="-1">中间人攻击 (Man-in-the-middle attack) <a class="header-anchor" href="#中间人攻击-man-in-the-middle-attack" aria-hidden="true">#</a></h3><p>恶意 WebView、路由器、ISP 等充当浏览器和客户端之间的中间人，转发并修改双方的通信内容，造成通信被窃听、篡改、冒充。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cdf775e29a74f6b9fbf3e5119578440~tplv-k3u1fbpfcp-watermark.image?" alt="截屏2022-08-01 09.56.57.png"></p><p>防御措施：</p><ul><li>HTTPS <ul><li>防窃听</li><li>防篡改</li><li>防冒充</li></ul></li><li>HTTP/3</li><li>HSTS (HTTP Strict-Transport-Security)</li><li>SRI (SubResource Integrity)</li></ul>`,72),e=[o];function t(c,r,i,y,D,F){return a(),l("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
