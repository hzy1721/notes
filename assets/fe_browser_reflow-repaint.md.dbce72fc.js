import{_ as e,c as o,o as t,U as l}from"./chunks/framework.e548c890.js";const u=JSON.parse('{"title":"回流和重绘","description":"","frontmatter":{},"headers":[],"relativePath":"fe/browser/reflow-repaint.md","filePath":"fe/browser/reflow-repaint.md","lastUpdated":1683687303000}'),i={name:"fe/browser/reflow-repaint.md"},a=l('<h1 id="回流和重绘" tabindex="-1">回流和重绘 <a class="header-anchor" href="#回流和重绘" aria-label="Permalink to &quot;回流和重绘&quot;">​</a></h1><h2 id="回流-reflow" tabindex="-1">回流 (reflow) <a class="header-anchor" href="#回流-reflow" aria-label="Permalink to &quot;回流 (reflow)&quot;">​</a></h2><p>元素的尺寸、位置或部分属性改变时，浏览器重新渲染部分文档称为<strong>回流</strong>。</p><p>会导致回流的操作：</p><ul><li>页面首次渲染</li><li>浏览器窗口大小改变</li><li>元素尺寸、位置改变</li><li>元素内容改变</li><li>元素字体大小改变</li><li>添加或删除<strong>可见</strong>的 DOM 元素</li><li>激活 CSS 伪类</li><li>访问部分属性或方法 <ul><li><code>clientWidth</code>、<code>clientHeight</code>、<code>clientTop</code>、<code>clientLeft</code></li><li><code>offsetWidth</code>、<code>offsetHeight</code>、<code>offsetTop</code>、<code>offsetLeft</code></li><li><code>scrollWidth</code>、<code>scrollHeight</code>、<code>scrollTop</code>、<code>scrollLeft</code></li><li><code>scrollIntoView()</code>、<code>scrollIntoViewIfNeeded()</code></li><li><code>getComputedStyle()</code></li><li><code>getBoundingClientRect()</code></li><li><code>scrollTo()</code></li></ul></li></ul><h2 id="重绘-repaint" tabindex="-1">重绘 (repaint) <a class="header-anchor" href="#重绘-repaint" aria-label="Permalink to &quot;重绘 (repaint)&quot;">​</a></h2><p>元素样式改变，但位置不变，浏览器重新绘制元素称为<strong>重绘</strong>。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>回流一定导致重绘，重绘不一定回流。</p><p>回流比重绘的代价更高。</p>',10),c=[a];function r(d,n,s,f,p,h){return t(),o("div",null,c)}const m=e(i,[["render",r]]);export{u as __pageData,m as default};
