import{_ as e,c as s,o as a,d as o}from"./app.32a4a0ab.js";const h=JSON.parse('{"title":"useMemo","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react-stack/react/hooks/use-memo.md","lastUpdated":1684034003000}'),t={name:"fe/react-stack/react/hooks/use-memo.md"},n=o(`<h1 id="usememo" tabindex="-1">useMemo <a class="header-anchor" href="#usememo" aria-hidden="true">#</a></h1><p>组件每次 re-render 都会重新执行函数内语句，并递归执行子组件函数，有时部分语句没必要重新执行，可以添加依赖数组或判断函数来决定是否重新渲染。</p><p>缓存函数计算结果，只有依赖数组变化时才重新计算。</p><ul><li>避免<strong>昂贵计算操作</strong></li><li>避免<strong>接收该值为 prop</strong> 的子组件 re-render</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cachedValue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useMemo</span><span style="color:#A6ACCD;">(calculateValue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dependencies)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,5),c=[n];function l(r,p,d,i,_,m){return a(),s("div",null,c)}const A=e(t,[["render",l]]);export{h as __pageData,A as default};
