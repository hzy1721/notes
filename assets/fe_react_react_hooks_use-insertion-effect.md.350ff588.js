import{_ as s,c as e,o as a,U as n}from"./chunks/framework.e548c890.js";const D=JSON.parse('{"title":"useInsertionEffect","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react/react/hooks/use-insertion-effect.md","filePath":"fe/react/react/hooks/use-insertion-effect.md","lastUpdated":1702821351000}'),t={name:"fe/react/react/hooks/use-insertion-effect.md"},o=n(`<h1 id="useinsertioneffect" tabindex="-1">useInsertionEffect <a class="header-anchor" href="#useinsertioneffect" aria-label="Permalink to &quot;useInsertionEffect&quot;">​</a></h1><p>React 更新 DOM 之前触发的 effect，通常用于插入动态 CSS。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">useInsertionEffect</span><span style="color:#A6ACCD;">(setup</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dependencies</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>参数/返回值：同 <code>useEffect</code></p><p>警告：</p><ul><li>不能在 <code>useInsertionEffect</code> 内更新状态</li><li>触发时 DOM 还未更新，ref 也没设置</li></ul><p>用途：</p><ul><li>CSS-in-JS 库动态插入 <code>&lt;style&gt;</code><ul><li>相比渲染时插入： <ul><li>React 渲染是非阻塞的，渲染过程中每一帧浏览器都会重新计算样式，严重影响性能</li></ul></li><li>相比 <code>useLayoutEffect</code> 和 <code>useEffect</code>： <ul><li>确保其他 effect 触发时是最新的样式，否则会导致 effect 内的布局计算出现错误</li></ul></li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">useInsertionEffect</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">styleElement</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,9),l=[o];function c(p,r,i,f,d,u){return a(),e("div",null,l)}const A=s(t,[["render",c]]);export{D as __pageData,A as default};
