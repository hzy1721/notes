import{_ as e,c as a,o as s,d as t}from"./app.eb4dc0a0.js";const f=JSON.parse('{"title":"useImperativeHandle","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react-stack/react/hooks/use-imperative-handle.md","lastUpdated":1684401573000}'),n={name:"fe/react-stack/react/hooks/use-imperative-handle.md"},l=t(`<h1 id="useimperativehandle" tabindex="-1">useImperativeHandle <a class="header-anchor" href="#useimperativehandle" aria-hidden="true">#</a></h1><p>自定义 ref 绑定的内容。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">useImperativeHandle</span><span style="color:#A6ACCD;">(ref</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> createHandle</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dependencies</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>参数：</p><ul><li><code>ref</code>：通过 <code>forwardRef</code> 拿到的 ref</li><li><code>createHandle</code>：返回暴露的 ref 值</li><li><code>dependencies</code>：<code>createHandle</code> 用到的所有响应式数据</li></ul><p>返回值：</p><ul><li><code>undefined</code></li></ul><p>用途：</p><ul><li>不想暴露整个 DOM 节点，而是节点的部分方法</li><li>暴露自定义方法</li></ul>`,9),o=[l];function c(p,r,d,i,_,u){return s(),a("div",null,o)}const m=e(n,[["render",c]]);export{f as __pageData,m as default};
