import{_ as l,c as i,o as e,d as t}from"./app.e6616afd.js";const m=JSON.parse('{"title":"设计模式","description":"","frontmatter":{},"headers":[{"level":2,"title":"创建型","slug":"创建型","link":"#创建型","children":[]},{"level":2,"title":"结构型","slug":"结构型","link":"#结构型","children":[]},{"level":2,"title":"行为型","slug":"行为型","link":"#行为型","children":[]}],"relativePath":"basic/design-pattern/overview.md"}'),a={name:"basic/design-pattern/overview.md"},r=t('<h1 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-hidden="true">#</a></h1><h2 id="创建型" tabindex="-1">创建型 <a class="header-anchor" href="#创建型" aria-hidden="true">#</a></h2><ul><li>Factory Method <ul><li>工厂方法</li></ul></li><li>Abstract Factory <ul><li>抽象工厂</li></ul></li><li>Builder</li><li>Prototype <ul><li>原型</li></ul></li><li>Singleton <ul><li>单例</li></ul></li></ul><h2 id="结构型" tabindex="-1">结构型 <a class="header-anchor" href="#结构型" aria-hidden="true">#</a></h2><ul><li>Adapter <ul><li>适配器</li></ul></li><li>Bridge</li><li>Composite <ul><li>组合</li></ul></li><li>Decorator <ul><li>装饰器</li></ul></li><li>Facade</li><li>Flyweight</li><li>Proxy <ul><li>代理</li></ul></li></ul><h2 id="行为型" tabindex="-1">行为型 <a class="header-anchor" href="#行为型" aria-hidden="true">#</a></h2><ul><li>Chain of Responsibility <ul><li>责任链</li></ul></li><li>Command <ul><li>命令</li></ul></li><li>Iterator <ul><li>迭代器</li></ul></li><li>Mediator</li><li>Memento</li><li>Observer <ul><li>观察者</li></ul></li><li>State</li><li>Strategy <ul><li>策略</li></ul></li><li>Template Method <ul><li>模板方法</li></ul></li><li>Visitor</li></ul>',7),o=[r];function u(d,n,s,c,h,_){return e(),i("div",null,o)}const f=l(a,[["render",u]]);export{m as __pageData,f as default};
