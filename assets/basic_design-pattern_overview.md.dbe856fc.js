import{_ as t,c as d,o as r,U as e}from"./chunks/framework.e548c890.js";const b=JSON.parse('{"title":"设计模式概述","description":"","frontmatter":{},"headers":[],"relativePath":"basic/design-pattern/overview.md","filePath":"basic/design-pattern/overview.md","lastUpdated":1695200371000}'),a={name:"basic/design-pattern/overview.md"},o=e('<h1 id="设计模式概述" tabindex="-1">设计模式概述 <a class="header-anchor" href="#设计模式概述" aria-label="Permalink to &quot;设计模式概述&quot;">​</a></h1><p>23 种设计模式，分为三类：</p><ul><li>创建型：创建对象的机制，提升灵活性和可复用性</li><li>结构型：将对象组装成更大的结构，同时保持结构的灵活和高效</li><li>行为型：对象间的通信和职责分工</li></ul><table><thead><tr><th>类型</th><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>创建型</td><td>Factory Method</td><td>工厂方法</td></tr><tr><td></td><td>Abstract Factory</td><td>抽象工厂</td></tr><tr><td></td><td>Builder</td><td>生成器</td></tr><tr><td></td><td>Prototype</td><td>原型</td></tr><tr><td></td><td>Singleton</td><td>单例</td></tr><tr><td>结构型</td><td>Adapter</td><td>适配器</td></tr><tr><td></td><td>Bridge</td><td>桥接</td></tr><tr><td></td><td>Composite</td><td>组合</td></tr><tr><td></td><td>Decorator</td><td>装饰器</td></tr><tr><td></td><td>Facade</td><td>外观</td></tr><tr><td></td><td>Flyweight</td><td>享元</td></tr><tr><td></td><td>Proxy</td><td>代理</td></tr><tr><td>行为型</td><td>Chain of Responsibility</td><td>责任链</td></tr><tr><td></td><td>Command</td><td>命令</td></tr><tr><td></td><td>Iterator</td><td>迭代器</td></tr><tr><td></td><td>Mediator</td><td>中介者</td></tr><tr><td></td><td>Memento</td><td>备忘录</td></tr><tr><td></td><td>Observer</td><td>观察者</td></tr><tr><td></td><td>State</td><td>状态</td></tr><tr><td></td><td>Strategy</td><td>策略</td></tr><tr><td></td><td>Template Method</td><td>模板方法</td></tr><tr><td></td><td>Visitor</td><td>访问者</td></tr></tbody></table>',4),i=[o];function s(n,c,l,_,h,p){return r(),d("div",null,i)}const v=t(a,[["render",s]]);export{b as __pageData,v as default};
