import{_ as s,c as i,o as a,a1 as e}from"./chunks/framework.mNpZ2GHZ.js";const u=JSON.parse('{"title":"箭头函数","description":"","frontmatter":{},"headers":[],"relativePath":"fe/lang/js/arrow.md","filePath":"fe/lang/js/arrow.md","lastUpdated":1702822707000}'),l={name:"fe/lang/js/arrow.md"},t=e(`<h1 id="箭头函数" tabindex="-1">箭头函数 <a class="header-anchor" href="#箭头函数" aria-label="Permalink to &quot;箭头函数&quot;">​</a></h1><p>ES6 引入的定义函数的新方式。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> func</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arg1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arg2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><ul><li>没有 <code>this</code><ul><li>调用时的 <code>this</code> 为声明时外部的 <code>this</code></li></ul></li><li>没有 <code>arguments</code><ul><li>可以用 rest 参数代替</li></ul></li><li>不能作为构造函数 <ul><li>使用 <code>new</code> 会报错</li></ul></li><li>不能作为生成器函数 <ul><li>函数内不能使用 <code>yield</code></li></ul></li></ul><p>优点：</p><ul><li>用箭头 <code>=&gt;</code> 代替 <code>function</code> 关键字，语法更简洁</li><li>只有一个参数可以省略圆括号，函数体只有一条语句可以省略花括号，简化了回调函数的写法</li></ul>`,6),n=[t];function h(d,o,p,c,r,k){return a(),i("div",null,n)}const _=s(l,[["render",h]]);export{u as __pageData,_ as default};
