import{_ as e,c as t,o as a,a1 as s}from"./chunks/framework.mNpZ2GHZ.js";const m=JSON.parse('{"title":"Fragment","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react/react/components/fragment.md","filePath":"fe/react/react/components/fragment.md","lastUpdated":1702822707000}'),i={name:"fe/react/react/components/fragment.md"},l=s(`<h1 id="fragment" tabindex="-1">Fragment <a class="header-anchor" href="#fragment" aria-label="Permalink to &quot;Fragment&quot;">​</a></h1><p>空组件，把多个元素组合为一个元素。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OneChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AnotherChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/&gt;</span></span></code></pre></div><p>prop：</p><ul><li><code>key</code>：唯一 key <ul><li>必须用 <code>&lt;Fragment key={key}&gt;</code> 而不能用 <code>&lt;key={key}&gt;</code></li></ul></li></ul><p>警告：</p><ul><li>在是否添加 <code>&lt;&gt;&lt;/&gt;</code> 之间切换可能导致状态被重置：<a href="https://gist.github.com/clemmy/b3ef00f9507909429d8aa0d3ee4f986b" target="_blank" rel="noreferrer">对照表</a></li></ul><p>用途：</p><ul><li>组件需要返回多个元素且不想添加包裹元素</li><li>把多个元素赋值给变量，用于组件 prop 等场合</li><li>组合文本节点和组件</li></ul>`,9),n=[l];function p(r,o,c,h,d,k){return a(),t("div",null,n)}const _=e(i,[["render",p]]);export{m as __pageData,_ as default};
