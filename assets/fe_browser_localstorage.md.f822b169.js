import{_ as e,c as a,o,U as l}from"./chunks/framework.e548c890.js";const m=JSON.parse('{"title":"localStorage","description":"","frontmatter":{},"headers":[],"relativePath":"fe/browser/localstorage.md","filePath":"fe/browser/localstorage.md","lastUpdated":1683687303000}'),t={name:"fe/browser/localstorage.md"},r=l('<h1 id="localstorage" tabindex="-1">localStorage <a class="header-anchor" href="#localstorage" aria-label="Permalink to &quot;localStorage&quot;">​</a></h1><p><code>sessionStorage/localStorage</code> 用于在浏览器上保存键值对。</p><p>最多 5MB，服务端无法操控。</p><h2 id="sessionstorage" tabindex="-1">sessionStorage <a class="header-anchor" href="#sessionstorage" aria-label="Permalink to &quot;sessionStorage&quot;">​</a></h2><ul><li>作用域是标签页，不同标签页有独立的数据</li><li>页面刷新会保留</li><li>标签页关闭后删除</li></ul><h2 id="localstorage-1" tabindex="-1">localStorage <a class="header-anchor" href="#localstorage-1" aria-label="Permalink to &quot;localStorage&quot;">​</a></h2><ul><li>作用域是同源 (same origin)</li><li>不同标签页/窗口之间共享</li><li>不会过期</li></ul><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><ul><li><code>getItem(key)</code>：按照键获取值</li><li><code>setItem(key, value)</code>：存储键值对</li><li><code>removeItem(key)</code>：删除键及其对应的值</li><li><code>clear()</code>：删除所有数据</li><li><code>key(index)</code>：获取该索引下的键名</li><li><code>length</code>：存储的内容的长度</li></ul>',9),i=[r];function s(c,d,n,h,_,g){return o(),a("div",null,i)}const p=e(t,[["render",s]]);export{m as __pageData,p as default};
