import{_ as s,c as n,o as a,d as l}from"./app.71c38c5d.js";const i=JSON.parse('{"title":"二叉树递归","description":"","frontmatter":{},"headers":[{"level":2,"title":"对称二叉树","slug":"对称二叉树","link":"#对称二叉树","children":[]},{"level":2,"title":"二叉树的最大深度","slug":"二叉树的最大深度","link":"#二叉树的最大深度","children":[]},{"level":2,"title":"翻转二叉树","slug":"翻转二叉树","link":"#翻转二叉树","children":[]},{"level":2,"title":"二叉树的直径","slug":"二叉树的直径","link":"#二叉树的直径","children":[]},{"level":2,"title":"合并二叉树","slug":"合并二叉树","link":"#合并二叉树","children":[]},{"level":2,"title":"二叉树中的最大路径和","slug":"二叉树中的最大路径和","link":"#二叉树中的最大路径和","children":[]}],"relativePath":"code/ds/binary-tree-recursive.md","lastUpdated":1678200215000}'),o={name:"code/ds/binary-tree-recursive.md"},p=l("",13),e=[p];function t(r,c,F,y,D,C){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{i as __pageData,d as default};
