import{_ as e,c as l,o as s,d as o}from"./app.89737b9a.js";const a="/assets/flex-direction.2a38910a.png",n="/assets/justify-content.8056f6c1.png",t="/assets/align-items.69cd9c92.png",m=JSON.parse('{"title":"flex 布局","description":"","frontmatter":{},"headers":[{"level":2,"title":"flex-direction","slug":"flex-direction","link":"#flex-direction","children":[]},{"level":2,"title":"justify-content","slug":"justify-content","link":"#justify-content","children":[]},{"level":2,"title":"align-items","slug":"align-items","link":"#align-items","children":[]},{"level":2,"title":"flex-grow","slug":"flex-grow","link":"#flex-grow","children":[]},{"level":2,"title":"flex-shrink","slug":"flex-shrink","link":"#flex-shrink","children":[]},{"level":2,"title":"flex-basis","slug":"flex-basis","link":"#flex-basis","children":[]},{"level":2,"title":"flex","slug":"flex","link":"#flex","children":[]}],"relativePath":"fe/css/flex.md"}'),c={name:"fe/css/flex.md"},i=o('<h1 id="flex-布局" tabindex="-1">flex 布局 <a class="header-anchor" href="#flex-布局" aria-hidden="true">#</a></h1><p>flex 是一种新的排版上下文，语法更直观、使用更方便。</p><p>可以控制子级盒子的：</p><ul><li>摆放方向</li><li>水平和垂直方向的对齐</li><li>摆放顺序</li><li>盒子的宽高</li><li>是否折行</li></ul><h2 id="flex-direction" tabindex="-1">flex-direction <a class="header-anchor" href="#flex-direction" aria-hidden="true">#</a></h2><p><code>flex-direction</code> 控制子级盒子的摆放方向，也就是主轴 (main axis) 的方向：</p><ul><li><code>row</code> (默认)：从左到右</li><li><code>row-reverse</code>：从右到左</li><li><code>column</code>：从上到下</li><li><code>column-reverse</code>：从下到上</li></ul><p><img src="'+a+'" alt=""></p><p>与主轴垂直的方向为交叉轴 (cross axis)。</p><h2 id="justify-content" tabindex="-1">justify-content <a class="header-anchor" href="#justify-content" aria-hidden="true">#</a></h2><p><code>justify-content</code> 控制主轴上的对齐方式：</p><ul><li><code>flex-start</code> (默认)：靠主轴开始侧，<code>row</code> 就是靠左对齐</li><li><code>flex-end</code>：靠主轴结束侧，<code>row</code> 就是靠右对齐</li><li><code>center</code>：居中对齐，<code>row/row-reverse</code> 就是水平居中</li><li><code>space-between</code>：占满整行/整列，子元素间距相等，两侧边缘无间距</li><li><code>space-around</code>：两侧边缘间距是中间间距的一半</li><li><code>space-evenly</code>：两侧边缘有间距，所有间距等长</li></ul><img src="'+n+'" style="zoom:50%;"><h2 id="align-items" tabindex="-1">align-items <a class="header-anchor" href="#align-items" aria-hidden="true">#</a></h2><p><code>align-items</code> 控制交叉轴上的对齐方式：</p><img src="'+t+`" style="zoom:50%;"><h2 id="flex-grow" tabindex="-1">flex-grow <a class="header-anchor" href="#flex-grow" aria-hidden="true">#</a></h2><p><code>flex-grow</code> 指定子元素的放大比例，默认是 <code>0</code>，有剩余空间也不放大。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-grow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;number&gt;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* default 0 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>如果所有项目的 <code>flex-grow</code> 属性都为 <code>1</code>，则它们将等分剩余空间（如果有的话）。</p><p>如果一个项目的 <code>flex-grow</code> 属性为 <code>2</code>，其他项目都为 <code>1</code>，则前者占据的剩余空间将比其他项多一倍。</p><h2 id="flex-shrink" tabindex="-1">flex-shrink <a class="header-anchor" href="#flex-shrink" aria-hidden="true">#</a></h2><p><code>flex-grow</code> 指定子元素的缩小比例，默认是 <code>1</code>，如果空间不足元素将缩小。不能为负值。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-shrink</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;number&gt;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* default 1 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>如果所有项目的 <code>flex-shrink</code> 属性都为 <code>1</code>，当空间不足时，都将等比例缩小。</p><p>如果一个项目的 <code>flex-shrink</code> 属性为 <code>0</code>，其他项目都为 <code>1</code>，则空间不足时，前者不缩小。</p><h2 id="flex-basis" tabindex="-1">flex-basis <a class="header-anchor" href="#flex-basis" aria-hidden="true">#</a></h2><p><code>flex-basis</code> 指定子元素的基础大小，根据所有子元素的基础大小计算容器的剩余空间或需要收缩的空间。默认是 <code>auto</code>，项目的本来大小。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-basis</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;length&gt; | auto</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* default auto */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>可以指定为绝对值 (与 <code>width</code> 或 <code>height</code> 相等)，使元素不会放大和缩小。</p><h2 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-hidden="true">#</a></h2><p><code>flex-grow flex-shrink flex-basis</code> 的简写，可以指定 1/2/3 个值。默认是 <code>0 1 auto</code>。</p><ul><li>1 个值 <ul><li><code>initial</code> =&gt; <code>0 1 auto</code></li><li><code>auto</code> =&gt; <code>1 1 auto</code></li><li><code>none</code> =&gt; <code>0 0 auto</code></li><li><code>&lt;number&gt;</code> =&gt; <code>&lt;number&gt; 1 0</code></li><li><code>&lt;width&gt;</code> =&gt; <code>1 1 &lt;width&gt;</code></li></ul></li><li>2 个值 <ul><li><code>&lt;number&gt; &lt;number&gt;</code> =&gt; <code>&lt;number&gt; &lt;number&gt; auto</code></li><li><code>&lt;number&gt; &lt;width&gt;</code> =&gt; <code>&lt;number&gt; 1 &lt;width&gt;</code></li></ul></li><li>3 个值 <ul><li><code>&lt;number&gt; &lt;number&gt; &lt;width&gt;</code></li></ul></li></ul>`,33),d=[i];function r(p,h,f,u,g,x){return s(),l("div",null,d)}const D=e(c,[["render",r]]);export{m as __pageData,D as default};
