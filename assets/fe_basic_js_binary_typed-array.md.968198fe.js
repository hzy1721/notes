import{_ as s,c as a,o as n,d as e}from"./app.01ac5356.js";const F=JSON.parse('{"title":"TypedArray","description":"","frontmatter":{},"headers":[],"relativePath":"fe/basic/js/binary/typed-array.md","lastUpdated":1680593177000}'),l={name:"fe/basic/js/binary/typed-array.md"},p=e(`<h1 id="typedarray" tabindex="-1">TypedArray <a class="header-anchor" href="#typedarray" aria-hidden="true">#</a></h1><p><code>TypedArray</code> 包含 9 种类型：</p><ul><li>无符号整数： <ul><li><code>Uint8/16/32Array</code></li><li><code>Uint8ClampedArray</code></li></ul></li><li>有符号整数： <ul><li><code>Int8/16/32Array</code></li></ul></li><li>浮点数： <ul><li><code>Float32/64Array</code></li></ul></li></ul><p>这些类型拥有相同的属性和方法。</p><p>构造函数：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TypedArray</span><span style="color:#A6ACCD;">(buffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [byteOffset]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [length])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TypedArray</span><span style="color:#A6ACCD;">(object)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TypedArray</span><span style="color:#A6ACCD;">(typedArray)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TypedArray</span><span style="color:#A6ACCD;">(length)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TypedArray</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>属性：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">TypedArray</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BYTES_PER_ELEMENT</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">typedArray</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">typedArray</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">typedArray</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">byteLength</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>方法：</p><ul><li>大部分数组方法，不支持 <code>splice/concat</code></li><li><code>arr.set(fromArr, [offset])</code><ul><li>从 <code>offset</code> 开始，把 <code>fromArr</code> 的所有元素复制到 <code>arr</code></li></ul></li><li><code>arr.subarray([begin, end])</code><ul><li>创建 <code>[begin, end)</code> 的新视图</li></ul></li></ul>`,10),o=[p];function r(t,c,y,d,i,A){return n(),a("div",null,o)}const C=s(l,[["render",r]]);export{F as __pageData,C as default};
