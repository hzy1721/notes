import{_ as s,c as a,o as l,a as n}from"./app.0f2923c6.js";const A=JSON.parse('{"title":"\u53EF\u8FED\u4EE3\u5BF9\u8C61","description":"","frontmatter":{},"headers":[{"level":2,"title":"Symbol.iterator","slug":"symbol-iterator"},{"level":2,"title":"\u53EF\u8FED\u4EE3 v.s. \u7C7B\u6570\u7EC4","slug":"\u53EF\u8FED\u4EE3-v-s-\u7C7B\u6570\u7EC4"}],"relativePath":"javascript/iterable.md"}'),o={name:"javascript/iterable.md"},e=n(`<h1 id="\u53EF\u8FED\u4EE3\u5BF9\u8C61" tabindex="-1">\u53EF\u8FED\u4EE3\u5BF9\u8C61 <a class="header-anchor" href="#\u53EF\u8FED\u4EE3\u5BF9\u8C61" aria-hidden="true">#</a></h1><p><strong>\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong>\u662F\u53EF\u4EE5\u5728 <code>for...of</code> \u5FAA\u73AF\u4E2D\u4F7F\u7528\u7684\u5BF9\u8C61\u3002\u53EF\u4EE5\u5C06\u4EFB\u4F55\u5BF9\u8C61\u901A\u8FC7\u5B9A\u5236\u53D8\u4E3A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002</p><p>\u53EF\u8FED\u4EE3\u7684\u5185\u5EFA\u5BF9\u8C61\uFF1A</p><ul><li><code>String</code></li><li><code>Array</code></li><li><code>Set</code></li><li><code>Map</code></li><li><code>arguments</code></li><li><code>TypedArray</code></li><li><code>NodeList</code></li></ul><h2 id="symbol-iterator" tabindex="-1">Symbol.iterator <a class="header-anchor" href="#symbol-iterator" aria-hidden="true">#</a></h2><p><code>for...of</code> \u5FAA\u73AF\u904D\u5386\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5173\u952E\u5728\u4E8E\u5BF9\u8C61\u7684 <code>Symbol.iterator</code> \u65B9\u6CD5\u3002</p><ol><li><code>for...of</code> \u5FAA\u73AF\u542F\u52A8\u65F6\uFF0C\u8C03\u7528\u5BF9\u8C61\u7684 <code>Symbol.iterator</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u4E00\u4E2A<strong>\u8FED\u4EE3\u5668 (iterator)</strong>\u3002 <ul><li>\u8FED\u4EE3\u5668\u662F\u6307\u62E5\u6709 <code>next()</code> \u65B9\u6CD5\u7684\u5BF9\u8C61\u3002</li><li>\u53EF\u9009\u7684 <code>return()</code> \u65B9\u6CD5\u5728\u8FED\u4EE3\u63D0\u524D\u9000\u51FA\u524D\u8C03\u7528 (<code>break</code> \u6216\u51FA\u9519)\u3002</li></ul></li><li><code>for...of</code> \u8C03\u7528\u8FED\u4EE3\u5668\u7684 <code>next()</code> \u65B9\u6CD5\u83B7\u53D6\u4E0B\u4E00\u4E2A\u503C\u3002 <ul><li><code>next()</code> \u8FD4\u56DE\u7684\u683C\u5F0F\u4E3A <code>{ done: Boolean, value: any }</code>\uFF0C<code>done: true</code> \u8868\u793A\u5FAA\u73AF\u7ED3\u675F</li></ul></li></ol><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> range </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">from</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#FFCB6B;">Symbol</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">iterator]</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      current</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">from</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      last</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">to</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      next</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">current</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">last</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> done</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">current</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> done</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> range) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 1, 2, 3, 4, 5</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5C31\u662F\u5B9E\u73B0\u4E86 <code>Symbol.iterator</code> \u65B9\u6CD5\u7684\u5BF9\u8C61\u3002</p><p>\u9664\u4E86 <code>for...of</code>\uFF0C\u8FD8\u6709\u5176\u4ED6\u573A\u5408\u4F1A\u7528\u5230 <code>Symbol.iterator</code> \u8FD4\u56DE\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF1A</p><ul><li>\u89E3\u6784\u8D4B\u503C (destructuring)</li><li>\u6269\u5C55\u8FD0\u7B97\u7B26 (spread operator)</li><li><code>yield*</code></li></ul><h2 id="\u53EF\u8FED\u4EE3-v-s-\u7C7B\u6570\u7EC4" tabindex="-1">\u53EF\u8FED\u4EE3 v.s. \u7C7B\u6570\u7EC4 <a class="header-anchor" href="#\u53EF\u8FED\u4EE3-v-s-\u7C7B\u6570\u7EC4" aria-hidden="true">#</a></h2><ul><li>\u53EF\u8FED\u4EE3 (Iterable)\uFF1A\u5B9E\u73B0\u4E86 <code>Symbol.iterator</code> \u65B9\u6CD5\u3002</li><li>\u7C7B\u6570\u7EC4 (Array-like)\uFF1A\u6709\u7D22\u5F15\u548C <code>length</code> \u5C5E\u6027\u3002</li></ul><p>\u6709\u7684\u5BF9\u8C61\u5373\u662F\u53EF\u8FED\u4EE3\u3001\u53C8\u662F\u7C7B\u6570\u7EC4\uFF0C\u6BD4\u5982 <code>String</code>\u3002</p><p>\u53EF\u8FED\u4EE3\u4E0D\u4E00\u5B9A\u662F\u7C7B\u6570\u7EC4\uFF0C\u7C7B\u6570\u7EC4\u4E0D\u4E00\u5B9A\u662F\u53EF\u8FED\u4EE3\u3002</p><p><code>Array.from()</code> \u53EF\u4EE5\u628A\u4E00\u4E2A\u53EF\u8FED\u4EE3\u6216\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u7EC4\u3002</p>`,16),p=[e];function t(c,r,F,y,i,D){return l(),a("div",null,p)}var C=s(o,[["render",t]]);export{A as __pageData,C as default};
