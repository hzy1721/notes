import{_ as e,c as r,o as l,a1 as a}from"./chunks/framework.mNpZ2GHZ.js";const _=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"fe/browser/worker/intro.md","filePath":"fe/browser/worker/intro.md","lastUpdated":1699838445000}'),t={name:"fe/browser/worker/intro.md"},o=a('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><p>Web Worker 允许在新的线程中执行耗时操作，避免阻塞主线程和 UI。</p><p>支持：</p><ul><li>JS 函数</li></ul><p>不支持：</p><ul><li>访问 DOM</li><li>访问 window</li></ul><h2 id="三种类型" tabindex="-1">三种类型 <a class="header-anchor" href="#三种类型" aria-label="Permalink to &quot;三种类型&quot;">​</a></h2><ul><li>dedicated worker <ul><li>只执行一个脚本</li></ul></li><li>shared worker <ul><li>多个脚本共享执行，通过端口通信</li></ul></li><li>service worker <ul><li>提供更好的离线体验</li><li>后台请求数据、推送通知</li></ul></li></ul><h2 id="全局变量和函数" tabindex="-1">全局变量和函数 <a class="header-anchor" href="#全局变量和函数" aria-label="Permalink to &quot;全局变量和函数&quot;">​</a></h2><p>web worker 访问不到主线程的 window，但也有自己的全局上下文。</p><table tabindex="0"><thead><tr><th>worker 类型</th><th>全局上下文</th></tr></thead><tbody><tr><td>dedicated</td><td>DedicatedWorkerGlobalScope</td></tr><tr><td>shared</td><td>SharedWorkerGlobalScope</td></tr><tr><td>service</td><td>ServiceWorkerGlobalScope</td></tr></tbody></table><p>部分 API 与主线程通用：</p><ul><li>atob()</li><li>btoa()</li><li>clearInterval()</li><li>clearTimeout()</li><li>dump() Non-standard</li><li>queueMicrotask()</li><li>setInterval()</li><li>setTimeout()</li><li>structuredClone()</li><li>window.requestAnimationFrame (dedicated workers only)</li><li>window.cancelAnimationFrame (dedicated workers only)</li></ul><p>部分 API 为 worker 独有：</p><ul><li>WorkerGlobalScope.importScripts() (all workers)</li><li>DedicatedWorkerGlobalScope.postMessage (dedicated workers only)</li></ul><h2 id="支持的-web-api" tabindex="-1">支持的 Web API <a class="header-anchor" href="#支持的-web-api" aria-label="Permalink to &quot;支持的 Web API&quot;">​</a></h2><p>MDN：<a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API#supported_web_apis" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API#supported_web_apis</a></p><h2 id="线程间通信" tabindex="-1">线程间通信 <a class="header-anchor" href="#线程间通信" aria-label="Permalink to &quot;线程间通信&quot;">​</a></h2><ol><li><code>postMessage</code> 发送消息</li><li>监听 <code>message</code> 事件，<code>event.data</code> 是消息数据 <ul><li>消息采用结构化拷贝</li></ul></li></ol>',19),i=[o];function d(s,n,c,p,h,u){return l(),r("div",null,i)}const k=e(t,[["render",d]]);export{_ as __pageData,k as default};
