import{_ as s,c as i,o as a,a1 as e}from"./chunks/framework.mNpZ2GHZ.js";const g=JSON.parse('{"title":"进程沙箱","description":"","frontmatter":{},"headers":[],"relativePath":"fe/desktop/electron/sandbox.md","filePath":"fe/desktop/electron/sandbox.md","lastUpdated":1704115023000}'),n={name:"fe/desktop/electron/sandbox.md"},t=e(`<h1 id="进程沙箱" tabindex="-1">进程沙箱 <a class="header-anchor" href="#进程沙箱" aria-label="Permalink to &quot;进程沙箱&quot;">​</a></h1><p>Electron 的沙箱来源于 Chromium，每个进程只能访问 CPU 和内存，其他授权操作需要派遣任务给更高权限的进程。</p><h2 id="渲染进程" tabindex="-1">渲染进程 <a class="header-anchor" href="#渲染进程" aria-label="Permalink to &quot;渲染进程&quot;">​</a></h2><p>Electron 的渲染进程与 Chromium 类似，无法访问 Node 和 Electron API，只能通过与主进程通信来完成相关操作。</p><h2 id="preload-脚本" tabindex="-1">preload 脚本 <a class="header-anchor" href="#preload-脚本" aria-label="Permalink to &quot;preload 脚本&quot;">​</a></h2><p>允许访问部分 Electron 和 Node API。</p><ul><li>electron <ul><li>contextBridge</li><li>crashReporter</li><li>ipcRenderer</li><li>nativeImage</li><li>webFrame</li></ul></li><li>node:events</li><li>node:timers</li><li>node:url</li><li>Buffer</li><li>process</li><li>clearImmediate</li><li>setImmediate</li></ul><h2 id="禁用-electron-沙箱" tabindex="-1">禁用 Electron 沙箱 <a class="header-anchor" href="#禁用-electron-沙箱" aria-label="Permalink to &quot;禁用 Electron 沙箱&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  webPreferences: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sandbox: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>启用 <code>nodeIntegration</code> 也会禁用沙箱：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  webPreferences: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nodeIntegration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="全局启用沙箱" tabindex="-1">全局启用沙箱 <a class="header-anchor" href="#全局启用沙箱" aria-label="Permalink to &quot;全局启用沙箱&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enableSandbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="禁用-chromium-沙箱" tabindex="-1">禁用 Chromium 沙箱 <a class="header-anchor" href="#禁用-chromium-沙箱" aria-label="Permalink to &quot;禁用 Chromium 沙箱&quot;">​</a></h2><p>禁用 Chromium 所有进程的沙箱，只推荐在测试时使用。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.commandLine.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendSwitch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--no-sandbox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,16),l=[t];function h(p,r,o,d,k,c){return a(),i("div",null,l)}const u=s(n,[["render",h]]);export{g as __pageData,u as default};
