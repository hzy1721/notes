import{_ as e,c as s,o as a,a1 as t}from"./chunks/framework.mNpZ2GHZ.js";const _=JSON.parse('{"title":"memo","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react/react/functions/memo.md","filePath":"fe/react/react/functions/memo.md","lastUpdated":1702822707000}'),i={name:"fe/react/react/functions/memo.md"},n=t('<h1 id="memo" tabindex="-1">memo <a class="header-anchor" href="#memo" aria-label="Permalink to &quot;memo&quot;">​</a></h1><p>跳过 prop 变化导致的 re-render。</p><ul><li>避免 <strong>prop 未变化</strong>子组件的 re-render <ul><li>React 默认父组件 re-render 时，所有子组件都 re-render</li></ul></li><li>通过自定义比较函数，跳过<strong>指定情况</strong>下的 re-render</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MemoizedComponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> memo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SomeComponent, arePropsEqual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',4),r=[n];function o(l,p,c,d,h,m){return a(),s("div",null,r)}const u=e(i,[["render",o]]);export{_ as __pageData,u as default};
