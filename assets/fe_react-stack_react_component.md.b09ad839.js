import{_ as s,c as o,o as e,d as l}from"./app.32a4a0ab.js";const A=JSON.parse('{"title":"组件与 JSX","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react-stack/react/component.md","lastUpdated":1683969919000}'),a={name:"fe/react-stack/react/component.md"},t=l(`<h1 id="组件与-jsx" tabindex="-1">组件与 JSX <a class="header-anchor" href="#组件与-jsx" aria-hidden="true">#</a></h1><p>React 应用由<strong>组件</strong>构成，小到一个按钮、大到一个页面都是组件，“一切皆组件”。</p><p>React 组件是一个函数，也叫做函数组件 (Function Component，FC)。</p><ul><li>接收输入的数据 <code>props</code></li><li>返回 JSX 表示的 UI 元素</li></ul><p>组件名 (也就是函数名) 必须首字母大写，并且遵循驼峰命名法。</p><p>JSX 是类似 HTML 的标记语言，区别是：</p><ul><li>支持像原生 HTML 元素一样书写组件元素</li><li>支持绑定变量值到元素内容、属性值</li><li>更方便的属性绑定，包括 <code>style</code>、事件处理函数 <code>onEvent</code> 等</li><li>语法更严格，单标签必须闭合</li><li>每个组件只能返回一个元素，不能是多个</li><li>支持空元素 <code>&lt;&gt;&lt;/&gt;</code></li><li>浏览器不支持，需要转译为 <code>React.createElement</code></li></ul><p>条件渲染：与 JS 语法相同</p><ul><li><code>condition ? &lt;AComponent/&gt; : &lt;BComponent /&gt;</code></li><li><code>condition &amp;&amp; &lt;AComponent /&gt;</code></li></ul><p>列表渲染：与 JS 语法相同</p><ul><li>必须为列表元素提供唯一的 <code>key</code>，用于 React 优化渲染</li></ul><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">record</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">record</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">}&gt;{</span><span style="color:#A6ACCD;">record</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">}&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,12),n=[t];function p(c,r,i,d,D,y){return e(),o("div",null,n)}const _=s(a,[["render",p]]);export{A as __pageData,_ as default};
