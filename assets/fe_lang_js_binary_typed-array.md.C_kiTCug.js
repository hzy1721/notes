import{_ as s,c as a,o as i,a1 as e}from"./chunks/framework.mNpZ2GHZ.js";const E=JSON.parse('{"title":"TypedArray","description":"","frontmatter":{},"headers":[],"relativePath":"fe/lang/js/binary/typed-array.md","filePath":"fe/lang/js/binary/typed-array.md","lastUpdated":1702822707000}'),l={name:"fe/lang/js/binary/typed-array.md"},n=e(`<h1 id="typedarray" tabindex="-1">TypedArray <a class="header-anchor" href="#typedarray" aria-label="Permalink to &quot;TypedArray&quot;">​</a></h1><p><code>TypedArray</code> 包含 9 种类型：</p><ul><li>无符号整数： <ul><li><code>Uint8/16/32Array</code></li><li><code>Uint8ClampedArray</code></li></ul></li><li>有符号整数： <ul><li><code>Int8/16/32Array</code></li></ul></li><li>浮点数： <ul><li><code>Float32/64Array</code></li></ul></li></ul><p>这些类型拥有相同的属性和方法。</p><p>构造函数：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TypedArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buffer, [byteOffset], [length]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TypedArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(object);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TypedArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(typedArray);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TypedArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(length);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TypedArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>属性：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TypedArray.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES_PER_ELEMENT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">typedArray.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">typedArray.buffer;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">typedArray.byteLength;</span></span></code></pre></div><p>方法：</p><ul><li>大部分数组方法，不支持 <code>splice/concat</code></li><li><code>arr.set(fromArr, [offset])</code><ul><li>从 <code>offset</code> 开始，把 <code>fromArr</code> 的所有元素复制到 <code>arr</code></li></ul></li><li><code>arr.subarray([begin, end])</code><ul><li>创建 <code>[begin, end)</code> 的新视图</li></ul></li></ul>`,10),t=[n];function p(r,d,h,k,y,c){return i(),a("div",null,t)}const g=s(l,[["render",p]]);export{E as __pageData,g as default};
