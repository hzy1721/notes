import{_ as s,c as n,o as a,a as p}from"./app.15131e7b.js";const i=JSON.parse('{"title":"\u4E8C\u53C9\u6811 DFS","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6700\u5C0F\u6DF1\u5EA6","slug":"\u6700\u5C0F\u6DF1\u5EA6"}],"relativePath":"algorithm/binary-tree-dfs.md"}'),l={name:"algorithm/binary-tree-dfs.md"},o=p(`<h1 id="\u4E8C\u53C9\u6811-dfs" tabindex="-1">\u4E8C\u53C9\u6811 DFS <a class="header-anchor" href="#\u4E8C\u53C9\u6811-dfs" aria-hidden="true">#</a></h1><h2 id="\u6700\u5C0F\u6DF1\u5EA6" tabindex="-1">\u6700\u5C0F\u6DF1\u5EA6 <a class="header-anchor" href="#\u6700\u5C0F\u6DF1\u5EA6" aria-hidden="true">#</a></h2><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">minDepth</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#A6ACCD;">* </span><span style="color:#FFCB6B;">root</span><span style="color:#A6ACCD;">) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">!root</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            return </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">!root-&gt;left &amp;&amp; !root-&gt;right</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            return </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        int </span><span style="color:#F07178;">depth</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> INT_MAX</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root-&gt;left</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">depth</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">min</span><span style="color:#A6ACCD;">(depth</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">minDepth</span><span style="color:#A6ACCD;">(root</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">left))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root-&gt;right</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">depth</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">min</span><span style="color:#A6ACCD;">(depth</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">minDepth</span><span style="color:#A6ACCD;">(root</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">right))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        return depth </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,3),e=[o];function t(r,c,D,C,y,A){return a(),n("div",null,e)}var d=s(l,[["render",t]]);export{i as __pageData,d as default};
