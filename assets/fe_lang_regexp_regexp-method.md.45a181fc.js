import{_ as s,c as a,o as e,U as l}from"./chunks/framework.e548c890.js";const C=JSON.parse('{"title":"RegExp 方法","description":"","frontmatter":{},"headers":[],"relativePath":"fe/lang/regexp/regexp-method.md","filePath":"fe/lang/regexp/regexp-method.md","lastUpdated":1702822707000}'),n={name:"fe/lang/regexp/regexp-method.md"},o=l(`<h1 id="regexp-方法" tabindex="-1">RegExp 方法 <a class="header-anchor" href="#regexp-方法" aria-label="Permalink to &quot;RegExp 方法&quot;">​</a></h1><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> regexp </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">1-3</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> regexpGlobal </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">1-3</span><span style="color:#89DDFF;">]/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">regexp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1 2 3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [&#39;1&#39;, index: 0, input: &#39;1 2 3&#39;, groups: undefined]</span></span>
<span class="line"><span style="color:#A6ACCD;">regexpGlobal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1 2 3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [&#39;1&#39;, index: 0, input: &#39;1 2 3&#39;, groups: undefined]</span></span>
<span class="line"><span style="color:#A6ACCD;">regexp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1 2 3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">regexpGlobal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1 2 3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><h2 id="exec" tabindex="-1">exec <a class="header-anchor" href="#exec" aria-label="Permalink to &quot;exec&quot;">​</a></h2><p>第一个匹配结果，获取所有匹配结果需要多次调用。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(str)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>返回结果：</p><ul><li>匹配成功：第一个匹配结果，更新 <code>lastIndex</code><ul><li><code>res[0]</code>：匹配结果</li><li><code>res[1...N]</code>：N 个捕获组</li><li><code>res.index</code>：匹配的起始索引</li><li><code>res.input</code>：原始字符串</li><li><code>res.groups</code>：命名捕获组</li></ul></li><li>无匹配：返回 <code>null</code>，设置 <code>lastIndex</code> 为 <code>0</code></li></ul><h2 id="test" tabindex="-1">test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;test&quot;">​</a></h2><p>是否有一个匹配结果，返回布尔值。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(str)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,10),p=[o];function t(c,r,i,D,y,d){return e(),a("div",null,p)}const A=s(n,[["render",t]]);export{C as __pageData,A as default};
