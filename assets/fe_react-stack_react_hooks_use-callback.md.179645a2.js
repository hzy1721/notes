import{_ as a,c as s,o as e,d as t}from"./app.71c38c5d.js";const C=JSON.parse('{"title":"useCallback","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react-stack/react/hooks/use-callback.md","lastUpdated":1684034003000}'),n={name:"fe/react-stack/react/hooks/use-callback.md"},c=t(`<h1 id="usecallback" tabindex="-1">useCallback <a class="header-anchor" href="#usecallback" aria-hidden="true">#</a></h1><p>缓存函数定义，只有依赖数组变化时才重新定义函数。</p><ul><li>避免<strong>接收该函数为 prop</strong> 的子组件 re-render</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cachedFn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useCallback</span><span style="color:#A6ACCD;">(fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dependencies)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,4),l=[c];function o(p,r,d,i,_,u){return e(),s("div",null,l)}const k=a(n,[["render",o]]);export{C as __pageData,k as default};
