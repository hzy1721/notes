import{_ as e,c as i,o as l,d as o}from"./app.01ac5356.js";const g=JSON.parse('{"title":"DoS","description":"","frontmatter":{},"headers":[{"level":2,"title":"DDoS","slug":"ddos","link":"#ddos","children":[]},{"level":2,"title":"ReDoS (Regex DoS)","slug":"redos-regex-dos","link":"#redos-regex-dos","children":[]},{"level":2,"title":"Logical DoS","slug":"logical-dos","link":"#logical-dos","children":[]}],"relativePath":"fe/optimization/security/dos.md","lastUpdated":1681116875000}'),a={name:"fe/optimization/security/dos.md"},d=o('<h1 id="dos" tabindex="-1">DoS <a class="header-anchor" href="#dos" aria-hidden="true">#</a></h1><p>DoS (Denial of Service，拒绝服务) 指的是通过某种手段使服务器资源被显著消耗，无法响应更多请求，造成雪崩效应，最终导致服务不可用。</p><h2 id="ddos" tabindex="-1">DDoS <a class="header-anchor" href="#ddos" aria-hidden="true">#</a></h2><p>DDoS (Distributed DoS) 指的是大量僵尸设备在短时间内向服务器发起请求，造成服务端<strong>带宽</strong>或 <strong>CPU</strong> 耗尽，无法响应新请求。</p><p>有以下特点：</p><ul><li>直接访问 IP</li><li>不区分 API</li><li>消耗大量带宽</li></ul><p>常见的有 SYN Flood。</p><p>防御措施：</p><ul><li>流量治理 <ul><li>负载均衡</li><li>API 网关</li><li>CDN</li></ul></li><li>快速自动扩容</li><li>非核心服务降级</li></ul><h2 id="redos-regex-dos" tabindex="-1">ReDoS (Regex DoS) <a class="header-anchor" href="#redos-regex-dos" aria-hidden="true">#</a></h2><p>不加问号 <code>?</code> 的正则表达式拥有<strong>贪婪匹配</strong>的特性，通过构造特定结构的字符串能够造成正则匹配过程中的大量回溯，使接口响应时间大幅增加、吞吐量大幅减少。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/159221d7ebb2449abae4ab3ddf4d636a~tplv-k3u1fbpfcp-watermark.image?" alt="截屏2022-08-01 08.58.48.png"></p><p>防御措施：</p><ul><li>Code Review <ul><li>避免上线此类代码</li></ul></li><li>代码扫描+正则性能测试</li><li>不使用用户提供的正则</li></ul><h2 id="logical-dos" tabindex="-1">Logical DoS <a class="header-anchor" href="#logical-dos" aria-hidden="true">#</a></h2><p>开发者编写的一些不合理的代码或一些不合理的需求，也会导致服务器资源被大量消耗、接口响应时间变长，比如：</p><ul><li>耗时的同步操作</li><li>数据库写入</li><li>SQL join</li><li>文件备份</li><li>循环执行逻辑</li></ul>',17),t=[d];function s(r,n,c,p,h,u){return l(),i("div",null,t)}const D=e(a,[["render",s]]);export{g as __pageData,D as default};
