import{_ as s,c as i,o as a,a1 as t}from"./chunks/framework.mNpZ2GHZ.js";const _=JSON.parse('{"title":"模板编译","description":"","frontmatter":{},"headers":[],"relativePath":"fe/vue/vue/template-compile.md","filePath":"fe/vue/vue/template-compile.md","lastUpdated":1702822707000}'),e={name:"fe/vue/vue/template-compile.md"},l=t(`<h1 id="模板编译" tabindex="-1">模板编译 <a class="header-anchor" href="#模板编译" aria-label="Permalink to &quot;模板编译&quot;">​</a></h1><blockquote><p>模板字符串</p></blockquote><ul><li>词法分析</li><li>语法分析</li></ul><blockquote><p>模板 AST</p></blockquote><ul><li>AST 转换</li></ul><blockquote><p>JS AST</p></blockquote><ul><li>代码生成</li></ul><blockquote><p>渲染函数</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> templateAST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(template); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 词法 + 语法分析</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> jsAST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(templateAST); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// AST 转换</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jsAST); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 代码生成</span></span></code></pre></div>`,9),p=[l];function n(h,k,o,r,c,d){return a(),i("div",null,p)}const g=s(e,[["render",n]]);export{_ as __pageData,g as default};
