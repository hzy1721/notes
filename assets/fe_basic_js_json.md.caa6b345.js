import{_ as e,c as l,o as s,d as o}from"./app.eb4201a6.js";const f=JSON.parse('{"title":"JSON","description":"","frontmatter":{},"headers":[{"level":2,"title":"JSON.stringify","slug":"json-stringify","link":"#json-stringify","children":[]}],"relativePath":"fe/basic/js/json.md","lastUpdated":1682650439000}'),n={name:"fe/basic/js/json.md"},a=o(`<h1 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-hidden="true">#</a></h1><h2 id="json-stringify" tabindex="-1">JSON.stringify <a class="header-anchor" href="#json-stringify" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> target </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(value))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>JSON 是 JS 的子集，只支持基础类型：</p><ul><li>只支持：有限数值、字符串、布尔值、<code>null</code>、普通对象、数组</li><li><code>Number</code>： <ul><li>支持普通数值</li><li><code>NaN</code>、<code>Infinity</code>、<code>-Infinity</code> 序列化为 <code>null</code></li></ul></li><li><code>BigInt</code>：报错</li><li><code>String</code>：支持</li><li><code>Boolean</code>：支持</li><li><code>null</code>：支持</li><li><code>undefined</code>： <ul><li>单值或对象属性：忽略</li><li>数组元素：序列化为 <code>null</code></li></ul></li><li><code>Symbol</code>： <ul><li>单值或对象属性：忽略</li><li>数组元素：序列化为 <code>null</code></li></ul></li><li><code>Object</code>： <ul><li>只支持可枚举字符串数据属性，意味着无法携带类型信息</li><li><code>Date</code> 对象会被序列化为 ISO 字符串，但 <code>JSON.parse</code> 无法解析回 <code>Date</code> 对象，只会保持原来的字符串类型</li></ul></li></ul>`,5),i=[a];function c(t,d,r,p,u,_){return s(),l("div",null,i)}const h=e(n,[["render",c]]);export{f as __pageData,h as default};
