import{_ as i,c as l,o as e,a1 as a}from"./chunks/framework.mNpZ2GHZ.js";const f=JSON.parse('{"title":"Function","description":"","frontmatter":{},"headers":[],"relativePath":"fe/lang/js/function/function.md","filePath":"fe/lang/js/function/function.md","lastUpdated":1702822707000}'),t={name:"fe/lang/js/function/function.md"},o=a('<h1 id="function" tabindex="-1">Function <a class="header-anchor" href="#function" aria-label="Permalink to &quot;Function&quot;">​</a></h1><p>函数类型的构造函数，每个函数都是一个 Function 对象。</p><h2 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><ul><li>动态创建函数</li><li>与 <code>eval()</code> 一样有安全风险</li><li>只能在全局作用域</li></ul><h2 id="自有属性" tabindex="-1">自有属性 <a class="header-anchor" href="#自有属性" aria-label="Permalink to &quot;自有属性&quot;">​</a></h2><ul><li><code>length</code><ul><li>形式参数的数量</li></ul></li><li><code>name</code><ul><li>函数名</li></ul></li><li><code>prototype</code><ul><li>原型对象，用于 <code>new</code></li><li><code>prototype.constructor</code> 等于函数自身</li></ul></li></ul><h2 id="原型方法" tabindex="-1">原型方法 <a class="header-anchor" href="#原型方法" aria-label="Permalink to &quot;原型方法&quot;">​</a></h2><ul><li><code>apply(this, args)</code><ul><li>用指定 this 和参数调用函数</li></ul></li><li><code>bind(this, ...args)</code><ul><li>绑定函数的 this 和任意数量的参数</li></ul></li><li><code>call(this, ...args)</code><ul><li>用指定 this 和参数调用函数</li></ul></li><li><code>toString()</code><ul><li>函数源码</li></ul></li><li><code>[@@hasInstance]()</code><ul><li>判断对象是否为 Function 实例，用于 <code>instanceof</code></li></ul></li></ul>',9),n=[o];function c(s,d,u,r,h,p){return e(),l("div",null,n)}const g=i(t,[["render",c]]);export{f as __pageData,g as default};
