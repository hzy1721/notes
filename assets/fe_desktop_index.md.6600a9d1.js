import{_ as t,c as o,o as a,k as e,a as n}from"./chunks/framework.e548c890.js";const C=JSON.parse('{"title":"PC 客户端","description":"","frontmatter":{},"headers":[],"relativePath":"fe/desktop/index.md","filePath":"fe/desktop/index.md","lastUpdated":1704115023000}'),s={name:"fe/desktop/index.md"},d=e("h1",{id:"pc-客户端",tabindex:"-1"},[n("PC 客户端 "),e("a",{class:"header-anchor",href:"#pc-客户端","aria-label":'Permalink to "PC 客户端"'},"​")],-1),i=e("p",null,"前端的跨端方案可以分为浏览器和原生 2 部分：",-1),l=e("ul",null,[e("li",null,"浏览器：用于渲染页面、执行脚本，内置浏览器或调用系统浏览器"),e("li",null,"原生：系统 API 的 JS 绑定，如果用 Node 就不需要绑定")],-1),c=e("p",null,"Electron 封装了 Chromium 和 Node，分别提供页面渲染能力和原生能力，是使用前端技术栈开发 PC 客户端的主流框架。",-1),r=e("p",null,"Tauri 不封装 Chromium，而是调用系统 WebView，大幅减小了包体积，缺点是不自带 WebView 的系统需要用户额外安装（Win10、Linux、低版本 macOS），原生能力基于 Rust 库提供 JS 绑定，没有使用 Node。",-1),_=[d,i,l,c,r];function p(u,h,m,f,x,P){return a(),o("div",null,_)}const N=t(s,[["render",p]]);export{C as __pageData,N as default};
